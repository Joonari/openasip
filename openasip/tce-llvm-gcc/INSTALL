tce-llvm-gcc cross-compiler installer
-------------------------------------

Compiles tce-llvm-gcc cross-compiler which tcecc uses for doing compiling C 
sources to llvm bitcode. This (or clang) must be installed before any 
C/C++ program can be compiled with TCE.

Note: you need to have LLVM 2.7 installed to compile the cross-compiler.

0.1 Download llvm-gcc sources for your tce installation from llvm.org.

   LLVM 2.7 compatible llvm-gcc is found in 
   http://llvm.org/releases/2.7/llvm-gcc-4.2-2.7.source.tgz

   Unpack this package to somewhere, it will be needed later in step 2.

0.2 Install Flex and Bison.

   These are needed to compile llvm-gcc.  
   For example: "sudo apt-get install flex bison".

0.3 Generate the required build scripts by executing 'autoreconf'

1. Make a separate build directory.

   mkdir tce-llvm-gcc-build
   cd tce-llvm-gcc-build

2. Configure the compiler as follows.

   <tce-frontend-dir>/configure --prefix=<installdir> --with-llvm-gcc-sources=<llvm-gcc-4.2-sources>

3. Build and install

   make
   make install

4. Add the target binary dir to the PATH environment variable (if not already)
   so tcecc can find it. You can verify it by executing 'tce-llvm-gcc' command
   without the full path.

Building the hard way
---------------------

This installer is just made for making building cross-compiler easier. You can
also get llvm-gcc sources and compile them directly with following commands.

llvmbindir=`llvm-config --bindir`
AR_FOR_TARGET=$llvmbindir/llvm-ar 
RANLIB_FOR_TARGET=$llvmbindir/llvm-ranlib 
AS_FOR_TARGET=$llvmbindir/llvm-as 
LD_FOR_TARGET=$llvmbindir/llvm-ld 
NM_FOR_TARGET=$llvmbindir/llvm-nm 
llvm-gcc4.2-sources/configure --prefix=<installdir> --target=tce-llvm --enable-languages=c,c++ --disable-bootstrap --enable-llvm=<llvm-installdir>
