library IEEE;
use IEEE.Std_Logic_1164.all;
use std.textio.all;

entity testbench is
end testbench;

architecture behav of testbench is

  --  Declaration and binding of the component that will be instantiated.
%1%

%2%
  --  Specify registers for the ports.
%3%
  
begin
  --  Map ports of the FU to registers.
%4%
  process

    -- Arrays for stimulus.
%5%
    -- Opcodes for each clock cycle.
%6%
    -- Load signals for each cycle
%7%
    -- Arrays for expected outputs for each output port.
%8%

     variable current_cycle : integer;
  begin

    -- Initialize the clock signal.
    %9% <= '0';

    -- Reset active to initialize regs
    %10% <= '0';
    wait for 1 ns;
    
    -- Release reset.
    %10% <= '1';
    -- Global lock off.
    %11% <= '0';


    for current_cycle in 0 to TOTAL_CYCLE_COUNT - 1 loop

    -- The actual test bench code.
%12%     
      -- Generate a clock pulse.
      -- TODO: Generate the clock in a separate component.
      wait for 1 ns;
      %9% <= not %9%;
      wait for 1 ns;
      %9% <= not %9%;

    end loop;  -- current_cycle

    -- Ends the simulation (at least in case of ghdl).
    wait;
  end process;
end behav;
